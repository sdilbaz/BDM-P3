# -*- coding: utf-8 -*-
"""
Created on Fri Apr 17 04:40:45 2020

@author: Serdarcan Dilbaz

Goal: (42, 1.9090909090909092, #neighbors, ((n1,s1),(n2,s2)...))

"""

from pyspark import SparkContext
import numpy as np
from operator import add
import time

grid_size=500

def get_neighbors(tup):
    offsets=[np.array([-1,-1]),np.array([-1,0]),np.array([-1,1]),np.array([0,-1]),np.array([0,0]),np.array([0,1]),np.array([1,-1]),np.array([1,0]),np.array([1,1])]
    all_reg=np.array(tup)+np.stack(offsets)
    neigh=all_reg[np.logical_and.reduce((all_reg[:,0]>=0, all_reg[:,1]>=0, all_reg[:,0]<grid_size, all_reg[:,1]<grid_size))]
    return list(map(lambda a:tuple(a),list(neigh)))

def enrich(temp):
    return map(lambda a:(a,temp[1]),get_neighbors(temp[0]))

def to_list(a):
    return [a]

def append(a, b):
    a.append(b)
    return a

def extend(a, b):
    a.extend(b)
    return a

def tuple2id(tup):
    return tup[0]+tup[1]*grid_size+1

def id2tuple(regid):
    return ((regid-1)%grid_size,(regid-1)//grid_size)

start_time=time.time()

sc =SparkContext()

raw_data = sc.textFile("points_k_means.txt")

data = raw_data.map(lambda x:np.array(x[1:-1].split(","),dtype='int'))
regionIds = data.map(lambda x: ((int((x[0]-1)/20),int((x[1]-1)/20)),1))

counts = regionIds.reduceByKey(add)
enriched=counts.flatMap(enrich)
base=enriched.combineByKey(to_list, append, extend)

template = counts.join(base)
rd_scores=template.map(lambda x:(tuple2id(x[0]),x[1][0]/np.mean(x[1][1]))).sortBy(lambda x: x[1],ascending=False)
sorted_scores = rd_scores.sortByKey()

results=[]
for bestID, bestScore in rd_scores.take(16):
    ns=get_neighbors(id2tuple(bestID))
    results.append((bestID,(bestScore,len(ns),tuple(map(lambda x : (tuple2id(x),sorted_scores.lookup(tuple2id(x))[0]),ns)))))

print("Results:",results)
print("Took %d seconds from start" %(time.time()-start_time))

## Printout
#Results: [(146074, (1.8214285714285714, 9, ((145573, 0.6948529411764706), (146073, 0.5907335907335907), (146573, 0.7679180887372014), (145574, 0.7415730337078651), (146074, 1.8214285714285714), (146574, 0.9067164179104478), (145575, 0.8153310104529616), (146075, 1.045774647887324), (146575, 0.9121621621621623)))), (40908, (1.8, 9, ((40407, 0.9090909090909091), (40907, 0.875), (41407, 0.6498194945848376), (40408, 0.996309963099631), (40908, 1.8), (41408, 0.9176470588235295), (40409, 0.5876288659793814), (40909, 0.8836363636363636), (41409, 0.8873239436619718)))), (205964, (1.7878787878787878, 9, ((205463, 0.7475083056478405), (205963, 0.6854304635761589), (206463, 0.9183673469387755), (205464, 1.1612903225806452), (205964, 1.7878787878787878), (206464, 1.0035971223021583), (205465, 0.9347181008902078), (205965, 0.869158878504673), (206465, 0.6946308724832214)))), (151162, (1.786764705882353, 9, ((150661, 0.7788461538461539), (151161, 0.8096885813148789), (151661, 0.8365384615384616), (150662, 0.8817567567567568), (151162, 1.786764705882353), (151662, 0.6702127659574468), (150663, 0.7622149837133549), (151163, 0.84375), (151663, 1.045774647887324)))), (28089, (1.75, 9, ((27588, 0.8586572438162544), (28088, 0.9581749049429658), (28588, 0.8064516129032258), (27589, 0.8764044943820224), (28089, 1.75), (28589, 0.7883211678832117), (27590, 0.8780487804878049), (28090, 0.534965034965035), (28590, 0.8102893890675241)))), (34957, (1.7439446366782005, 9, ((34456, 0.806896551724138), (34956, 0.8556338028169014), (35456, 0.7666666666666667), (34457, 1.1476510067114092), (34957, 1.7439446366782005), (35457, 0.8764044943820224), (34458, 1.0836120401337792), (34958, 0.9674267100977197), (35458, 0.7578947368421053)))), (46724, (1.7429577464788732, 9, ((46223, 0.7075471698113207), (46723, 0.823943661971831), (47223, 1.0531914893617023), (46224, 1.0485436893203883), (46724, 1.7429577464788732), (47224, 0.7922535211267605), (46225, 0.8181818181818182), (46725, 0.7248322147651006), (47225, 0.982394366197183)))), (221794, (1.7333333333333334, 9, ((221293, 0.8699999999999999), (221793, 1.032258064516129), (222293, 0.9375), (221294, 0.680921052631579), (221794, 1.7333333333333334), (222294, 1.0568181818181819), (221295, 0.96875), (221795, 0.8555133079847909), (222295, 0.5730337078651685)))), (48809, (1.7333333333333334, 9, ((48308, 0.80859375), (48808, 0.9729729729729729), (49308, 0.7839721254355401), (48309, 0.8458646616541353), (48809, 1.7333333333333334), (49309, 0.7741935483870968), (48310, 0.9712230215827338), (48810, 0.8907849829351535), (49310, 1.00990099009901)))), (23517, (1.7320754716981133, 9, ((23016, 0.7647058823529411), (23516, 0.8556338028169014), (24016, 0.69), (23017, 0.7322033898305085), (23517, 1.7320754716981133), (24017, 1.047945205479452), (23018, 0.9152542372881356), (23518, 0.9755244755244755), (24018, 0.59375)))), (52589, (1.7294117647058824, 9, ((52088, 0.9455252918287937), (52588, 1.023529411764706), (53088, 0.6206896551724138), (52089, 0.6477272727272727), (52589, 1.7294117647058824), (53089, 1.0333333333333334), (52090, 1.1371841155234657), (52590, 0.776978417266187), (53090, 0.7212543554006968)))), (128294, (1.7211155378486056, 9, ((127793, 0.8787878787878788), (128293, 0.9197080291970804), (128793, 0.7366548042704627), (127794, 0.8211678832116789), (128294, 1.7211155378486056), (128794, 0.9130434782608695), (127795, 0.8811188811188811), (128295, 0.896678966789668), (128795, 0.4576271186440678)))), (48059, (1.7128027681660898, 9, ((47558, 0.9411764705882353), (48058, 0.8076923076923077), (48558, 1.0), (47559, 0.8847457627118643), (48059, 1.7128027681660898), (48559, 0.9163636363636363), (47560, 1.1026490066225165), (48060, 0.5551948051948052), (48560, 0.8073089700996678)))), (61929, (1.7096774193548387, 9, ((61428, 0.8907849829351535), (61928, 0.7237762237762237), (62428, 0.8076923076923077), (61429, 0.7021276595744681), (61929, 1.7096774193548387), (62429, 0.9407665505226481), (61430, 0.9230769230769231), (61930, 0.888157894736842), (62430, 0.9381107491856676)))), (60810, (1.7035714285714285, 9, ((60309, 0.8122743682310469), (60809, 0.979591836734694), (61309, 0.84375), (60310, 0.78125), (60810, 1.7035714285714285), (61310, 0.804635761589404), (60311, 0.806896551724138), (60811, 1.1290322580645162), (61311, 0.8408304498269895)))), (38440, (1.6952054794520548, 9, ((37939, 0.805111821086262), (38439, 1.3366336633663367), (38939, 0.9473684210526316), (37940, 0.8392282958199356), (38440, 1.6952054794520548), (38940, 0.7401315789473684), (37941, 0.7081967213114755), (38441, 0.9574468085106383), (38941, 0.6622073578595318))))]
#Took 185 seconds from start




